[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[project]
name = "rename-with-llm"
version = "0.1.0"
description = "AI-powered file renaming tool with content analysis"
requires-python = ">=3.13"
dependencies = [
    "openai>=1.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "pypdf>=4.0.0",
    "python-docx>=0.8.11",
    "Pillow>=10.0.0",
    "pytesseract>=0.3.10",
    "python-magic>=0.4.27",
    "PyYAML>=6.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.13.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "types-PyYAML>=6.0.0",
]

[project.scripts]
ai-rename = "src.cli:main"

[tool.mypy]
python_version = "3.13"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*", "*/.venv/*"]

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "E501",   # line too long
]

[tool.ruff.lint.isort]
known-first-party = ["src"]
force-sort-within-sections = true
split-on-trailing-comma = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/**/*" = ["S101"]   # assert usage in tests
